{"version":3,"sources":["../../src/controllers/users.js"],"names":["users","addUser","id","name","room","trim","toLowerCase","existingUser","find","user","error","push","removeUser","index","findIndex","splice","getUser","getUsersInRoom","filter"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAG,EAAd;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAwB;AAAA,MAArBC,EAAqB,QAArBA,EAAqB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACtCD,EAAAA,IAAI,GAAGA,IAAI,CAACE,IAAL,GAAYC,WAAZ,EAAP;AACAF,EAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,GAAYC,WAAZ,EAAP;AAEA,MAAMC,YAAY,GAAGP,KAAK,CAACQ,IAAN,CACnB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACL,IAAL,KAAcA,IAAd,IAAsBK,IAAI,CAACN,IAAL,KAAcA,IAAxC;AAAA,GADe,CAArB;AAIA,MAAI,CAACA,IAAD,IAAS,CAACC,IAAd,EAAoB,OAAO;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAP;AACpB,MAAIH,YAAJ,EAAkB,OAAO;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAAP;AAElB,MAAMD,IAAI,GAAG;AAAEP,IAAAA,EAAE,EAAFA,EAAF;AAAMC,IAAAA,IAAI,EAAJA,IAAN;AAAYC,IAAAA,IAAI,EAAJA;AAAZ,GAAb;AAEAJ,EAAAA,KAAK,CAACW,IAAN,CAAWF,IAAX;AAEA,SAAO;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD,CAhBD;;;;AAkBA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAV,EAAE,EAAI;AACvB,MAAMW,KAAK,GAAGb,KAAK,CAACc,SAAN,CAAgB,UAAAL,IAAI;AAAA,WAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB;AAAA,GAApB,CAAd;AAEA,MAAIW,KAAK,KAAK,CAAC,CAAf,EAAkB,OAAOb,KAAK,CAACe,MAAN,CAAaF,KAAb,EAAoB,CAApB,EAAuB,CAAvB,CAAP;AACnB,CAJD;;;;AAMA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAAd,EAAE;AAAA,SAAIF,KAAK,CAACQ,IAAN,CAAW,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB;AAAA,GAAf,CAAJ;AAAA,CAAlB;;;;AAEA,IAAMe,cAAc,GAAG,SAAjBA,cAAiB,CAAAb,IAAI;AAAA,SAAIJ,KAAK,CAACkB,MAAN,CAAa,UAAAT,IAAI;AAAA,WAAIA,IAAI,CAACL,IAAL,KAAcA,IAAlB;AAAA,GAAjB,CAAJ;AAAA,CAA3B","sourcesContent":["const users = [];\r\n\r\nconst addUser = ({ id, name, room }) => {\r\n  name = name.trim().toLowerCase();\r\n  room = room.trim().toLowerCase();\r\n\r\n  const existingUser = users.find(\r\n    user => user.room === room && user.name === name\r\n  );\r\n\r\n  if (!name || !room) return { error: 'Username and room are required.' };\r\n  if (existingUser) return { error: 'Username is taken.' };\r\n\r\n  const user = { id, name, room };\r\n\r\n  users.push(user);\r\n\r\n  return { user };\r\n};\r\n\r\nconst removeUser = id => {\r\n  const index = users.findIndex(user => user.id === id);\r\n\r\n  if (index !== -1) return users.splice(index, 1)[0];\r\n};\r\n\r\nconst getUser = id => users.find(user => user.id === id);\r\n\r\nconst getUsersInRoom = room => users.filter(user => user.room === room);\r\n\r\nexport { addUser, removeUser, getUser, getUsersInRoom };"],"file":"users.js"}